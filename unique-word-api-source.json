{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "An API for generating a unique word from a predefined list.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Initial Setup"
                    },
                    "Parameters": ["ShuffleWordList"]
                },
                {
                    "Label": {
                        "default": "Configuration"
                    },
                    "Parameters": ["MaxRequestsPerSecond", "PreWarmingEnabled"]
                }
            ],
            "ParameterLabels": {
                "MaxRequestsPerSecond": {
                    "default": "Max Requests Per Second"
                },
                "PreWarmingEnabled": {
                    "default": "Pre-Warming Enabled"
                },
                "ShuffleWordList": {
                    "default": "Shuffle Word List"
                }
            }
        }
    },
	"Parameters": {
        "MaxRequestsPerSecond": {
            "Type": "Number",
            "Description": "Sets provisioned DynamoDB throughput.",
            "Default": 1,
            "MinValue": 1
        },
        "PreWarmingEnabled": {
            "Type": "String",
            "Description": "Ping resources each minute to keep initial response times fast.",
			"Default": "Yes",
			"AllowedValues": ["Yes", "No"]
        },
        "ShuffleWordList": {
            "Type": "String",
			"Default": "Yes",
			"AllowedValues": ["Yes", "No"]
        }
    },
	"Mappings": {
		"StaticVariables": {
			"Main": {
                "GenerateWordHttpMethod": "GET",
                "GenerateWordMethodPathPart": "generate-word",
                "StageName": "v1",
                "WordList": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
			}
		}
	},
	"Conditions": {
		"PreWarmingEnabledCondition": {
			"Fn::Equals": [{
				"Ref": "PreWarmingEnabled"
			}, "Yes"]
		}
    },
	"Resources": {
		"WordListQueue": {
			"Type": "AWS::SQS::Queue",
			"Properties": {
                "VisibilityTimeout": 60
			}
		},
        "UsedWordsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "PartitionKey",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "PartitionKey",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "MaxRequestsPerSecond"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "MaxRequestsPerSecond"
                    }
                }
            }
        },
		"ConfigurationSetupFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
                "Description": "Performs initial setup of unique word generator.",
				"Handler": "index.lambda_handler",
                "MemorySize": 1024,
				"Role": {
					"Fn::GetAtt": ["ConfigurationSetupRole", "Arn"]
				},
				"Code": {
					"ZipFile": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
				},
				"Runtime": "python2.7",
				"Timeout": "300"
			}
		},
		"ConfigurationSetupRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/"
			}
		},
        "ConfigurationSetupRoleActions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
						"Resource": {
    						"Fn::Join": [":", [
                                "arn",
                                "aws",
                                "logs",
                                {
                                    "Ref": "AWS::Region"
                                },
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                "log-group",
                                {
                                    "Fn::Join": ["", [
                                        "/aws/lambda/",
                                        {
                                            "Ref": "ConfigurationSetupFunction"
                                        }
                                    ]]
                                },
                                "log-stream",
                                "*"
                            ]]
						}
					},
                    {
                        "Effect": "Allow",
                        "Action": ["sqs:SendMessage", "sqs:SendMessageBatch", "sqs:GetQueueAttributes", "sqs:PurgeQueue"],
                        "Resource": {
    						"Fn::GetAtt": ["WordListQueue", "Arn"]
                        }
                    }]
				},
                "Roles": [
                    { "Ref": "ConfigurationSetupRole" }
                ]
            }
        },
		"ConfigurationSetupInvocation": {
			"Type": "Custom::ConfigurationSetupInvocation",
			"Properties": {
				"ServiceToken": {
					"Fn::GetAtt": ["ConfigurationSetupFunction", "Arn"]
				},
                "ShuffleWordList": {
                    "Ref": "ShuffleWordList"
                },
				"WordListQueueUrl": {
                    "Ref": "WordListQueue"
				},
                "WordList": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "WordList"]
                }
			},
            "DependsOn": [
                "ConfigurationSetupRoleActions"
            ]
		},
		"WordGeneratorFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
                "Description": "Responds to API requests for the unique name generator.",
				"Handler": "index.lambda_handler",
                "MemorySize": 320,
				"Role": {
					"Fn::GetAtt": ["WordGeneratorRole", "Arn"]
				},
				"Code": {
					"ZipFile": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
				},
				"Runtime": "python2.7",
				"Timeout": "60"
			}
		},
		"WordGeneratorRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/"
			}
		},
        "WordGeneratorRoleActions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": ["logs:CreateLogGroup", "logs:CreateLogStream", "logs:PutLogEvents"],
						"Resource": {
    						"Fn::Join": [":", [
                                "arn",
                                "aws",
                                "logs",
                                {
                                    "Ref": "AWS::Region"
                                },
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                "log-group",
                                {
                                    "Fn::Join": ["", [
                                        "/aws/lambda/",
                                        {
                                            "Ref": "WordGeneratorFunction"
                                        }
                                    ]]
                                },
                                "log-stream",
                                "*"
                            ]]
						}
					},
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sqs:DeleteMessage",
                            "sqs:ReceiveMessage",
                            "sqs:SendMessage"
                        ],
                        "Resource": {
    						"Fn::GetAtt": ["WordListQueue", "Arn"]
                        }
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "dynamodb:DeleteItem",
                            "dynamodb:PutItem"
                        ],
                        "Resource": {
    						"Fn::Join": [":", [
    						    "arn",
                                "aws",
                                "dynamodb",
                                {
                                    "Ref": "AWS::Region"
                                },
                                {
                                    "Ref": "AWS::AccountId"
                                },
                                {
                                    "Fn::Join": ["/", [
                                        "table",
                                        {
                                            "Ref": "UsedWordsTable"
                                        }
                                    ]]
                                }
    						]]
                        }
                    }]
				},
                "Roles": [
                    { "Ref": "WordGeneratorRole" }
                ]
            }
        },
        "WordGeneratorApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "WordGenerator",
                "Description": "An API for generating unique words."
            }
        },
        "WordGeneratorApiRootGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "ResourceId": {
                    "Fn::GetAtt": [ "WordGeneratorApi", "RootResourceId" ]
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "HttpMethod": "GET",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Content-Type": "'text/html'"
                            },
                            "ResponseTemplates": {
                                "text/html": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Content-Type": false
                        },
                        "StatusCode": "200"
                    }
                ]
            }
        },
        "WordGeneratorApiGenerateNameResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": ["WordGeneratorApi", "RootResourceId"]
                },
                "PathPart": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordMethodPathPart"]
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                }
            }
        },
        "WordGeneratorGenerateWordApiGatewayLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "WordGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [":", [
                        "arn",
                        "aws",
                        "execute-api",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "AWS::AccountId"
                        },
                        {
                            "Fn::Join": ["/", [
                                {
                                    "Ref": "WordGeneratorApi"
                                },
                                "*",
                                {
                                    "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                                },
                                {
                                    "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordMethodPathPart"]
                                }
                            ]]
                        }
                    ]]
                }
            },
            "DependsOn": [
                "WordGeneratorRoleActions"
            ]
        },
        "WordGeneratorPreWarmApiGatewayLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "WordGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [":", [
                        "arn",
                        "aws",
                        "execute-api",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "AWS::AccountId"
                        },
                        {
                            "Fn::Join": ["/", [
                                {
                                    "Ref": "WordGeneratorApi"
                                },
                                "*",
                                "POST",
                                {
                                    "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordMethodPathPart"]
                                }
                            ]]
                        }
                    ]]
                }
            },
            "DependsOn": [
                "WordGeneratorRoleActions"
            ]
        },
        "WordGeneratorApiGenerateNameResourceMainMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "ResourceId": {
                    "Ref": "WordGeneratorApiGenerateNameResource"
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "HttpMethod": 
                {
                    "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                },
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": {
                                    "Fn::Join": ["", [
                                        "'",
                                        {
                                            "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                                        },
                                        ",",
                                        "OPTIONS",
                                        "'"
                                    ]]
                                },
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,Pragma,Cache-Control,If-Modified-Since'",
                                "method.response.header.Content-Type": "'text/plain'"
                            },
                            "ResponseTemplates": {
                                "text/plain": "$input.path('$')"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": ["", [
                                "{\n",
                                "\t",
                                "\"request-body\": $input.json(\"$\"),\n",
                                "\t",
                                "\"wordlist-queue-url\": \"",
                                {
                                    "Ref": "WordListQueue"
                                },
                                "\",\n",
                                "\t",
                                "\"used-words-table\": \"",
                                {
                                    "Ref": "UsedWordsTable"
                                },
                                "\"\n",
                                "}"
                            ]]
                        }
                    },
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [":", [
                            "arn",
                            "aws",
                            "apigateway",
                            {
                                "Ref": "AWS::Region"
                            },
                            "lambda",
                            {
                                "Fn::Join": ["/", [
                                    "path",
                                    "2015-03-31",
                                    "functions",
                                    {
                                        "Fn::GetAtt": ["WordGeneratorFunction", "Arn"]
                                    },
                                    "invocations"
                                ]]
                            }
                        ]]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Content-Type": false
                        },
                        "StatusCode": "200"
                    }
                ]
            }
        },
        "WordGeneratorApiGenerateNameResourcePreWarmMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "POST",
                "RequestParameters": {
                    "method.request.header.x-amz-sns-message-type": false,
                    "method.request.header.x-amz-sns-message-id": false,
                    "method.request.header.x-amz-sns-topic-arn": false
                },
                "ResourceId": {
                    "Ref": "WordGeneratorApiGenerateNameResource"
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseTemplates": {
                                "application/json": "$input.path('$')"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "text/plain": {
                            "Fn::Join": ["", [
                                "{\n",
                                "\t",
                                "\"used-words-table\": \"",
                                {
                                    "Ref": "UsedWordsTable"
                                },
                                "\",\n",
                                "\t\"warming\": true,\n",
                                "\t\"request-body\": $input.json('$'),\n",
                                "\t\"x-amz-sns-message-type\": \"$input.params('x-amz-sns-message-type')\",\n",
                                "\t\"x-amz-sns-message-id\": \"$input.params('x-amz-sns-message-id')\",\n",
                                "\t\"x-amz-sns-topic-arn\": \"$input.params('x-amz-sns-topic-arn')\"",
                                "\n",
                                "}"
                            ]]
                        }
                    },
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Join": [":", [
                            "arn",
                            "aws",
                            "apigateway",
                            {
                                "Ref": "AWS::Region"
                            },
                            "lambda",
                            {
                                "Fn::Join": ["/", [
                                    "path",
                                    "2015-03-31",
                                    "functions",
                                    {
                                        "Fn::GetAtt": ["WordGeneratorFunction", "Arn"]
                                    },
                                    "invocations"
                                ]]
                            }
                        ]]
                    }
                },
                "MethodResponses": [
                    {
                        "StatusCode": "200"
                    }
                ]
            }
        },
        "WordGeneratorApiGenerateNameResourceOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "ResourceId": {
                    "Ref": "WordGeneratorApiGenerateNameResource"
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "HttpMethod": "OPTIONS",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": {
                                    "Fn::Join": ["", [
                                        "'",
                                        {
                                            "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                                        },
                                        ",",
                                        "OPTIONS",
                                        "'"
                                    ]]
                                },
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,Pragma,Cache-Control,If-Modified-Since'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": \"200\"}"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Headers": false
                        },
                        "StatusCode": "200"
                    }
                ]
            }
        },
        "WordGeneratorApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "StageName": "DummyStage"
            },
            "DependsOn": [
                "WordGeneratorApiGenerateNameResourceMainMethod",
                "WordGeneratorApiGenerateNameResourceOptions"
            ]
        },
        "WordGeneratorApiStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "WordGeneratorApiDeployment"
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "StageName": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "StageName"]
                }
            }
        },
        "WordGeneratorPreWarmingEventRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Keeps unique word generator API initial response times fast.",
                "ScheduleExpression": "rate(1 minute)",
                "State": {
                    "Fn::If": [
                        "PreWarmingEnabledCondition",
                        "ENABLED",
                        "DISABLED"
                    ]
                },
                "Targets": [
                    {
                        "Arn": {
                            "Ref": "WordGeneratorPreWarmingTopic"
                        },
                        "Id": "WordGeneratorPreWarmingTopic"
                    }
                ]
            }
        },
        "WordGeneratorPreWarmingTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "Subscription": [
                    {
                        "Endpoint": {
                            "Fn::Join": [
                                "", [
                                    "https://",
                                    {
                                        "Ref": "WordGeneratorApi"
                                    },
                                    ".execute-api.",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ".amazonaws.com/",
                                    {
                                        "Fn::FindInMap": ["StaticVariables", "Main", "StageName"]
                                    },
                                    "/",
                                    {
                                        "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordMethodPathPart"]
                                    }
                                ]
                            ]
                        },
                        "Protocol": "https"
                    }
                ]
            },
            "DependsOn": [
                "WordGeneratorRoleActions",
                "WordGeneratorPreWarmApiGatewayLambdaPermission"
            ]
        },
        "WordGeneratorPreWarmingTopicPolicy": {
            "Type": "AWS::SNS::TopicPolicy",
            "Properties": {
                "Topics": [
                    {
                        "Ref": "WordGeneratorPreWarmingTopic"
                    }
                ],
                "PolicyDocument": {
                    "Id": "AllowCloudWatchEvents",
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Statement1",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "events.amazonaws.com"
                            },
                            "Action": "sns:Publish",
                            "Resource": {
                                "Ref": "WordGeneratorPreWarmingTopic"
                            }
                        }
                    ]
                }
            }
        }
	},
    "Outputs": {
        "WordGeneratorApiEndPoint": {
            "Value": {
                "Fn::Join": [
                    "", [
                        "https://",
                        {
                            "Ref": "WordGeneratorApi"
                        },
                        ".execute-api.",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".amazonaws.com/",
                        {
                            "Fn::FindInMap": ["StaticVariables", "Main", "StageName"]
                        },
                        "/"
                    ]
                ]
            }
        }
    }
}