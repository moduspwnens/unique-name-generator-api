{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "An API for generating a unique word from a predefined list.",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Initial Setup"
                    },
                    "Parameters": ["ShuffleWordList"]
                },
                {
                    "Label": {
                        "default": "Configuration"
                    },
                    "Parameters": ["MaxRequestsPerSecond", "PreWarmingEnabled"]
                }
            ],
            "ParameterLabels": {
                "LogRetentionDays": {
                    "default": "Log Retention (days)"
                },
                "MaxRequestsPerSecond": {
                    "default": "Max Requests Per Second"
                },
                "PreWarmingEnabled": {
                    "default": "Pre-Warming Enabled"
                },
                "ShuffleWordList": {
                    "default": "Shuffle Word List"
                }
            }
        }
    },
	"Parameters": {
        "LogRetentionDays": {
            "Type": "String",
            "Default": "14",
            "AllowedValues": ["1", "3", "5", "7", "14", "30", "60", "90", "120", "150", "180", "365", "400", "545", "731", "1827", "3653"]
        },
        "MaxRequestsPerSecond": {
            "Type": "Number",
            "Description": "Sets provisioned DynamoDB throughput.",
            "Default": 1,
            "MinValue": 1
        },
        "PreWarmingEnabled": {
            "Type": "String",
            "Description": "Ping resources each minute to keep initial response times fast.",
			"Default": "Yes",
			"AllowedValues": ["Yes", "No"]
        },
        "ShuffleWordList": {
            "Type": "String",
			"Default": "Yes",
			"AllowedValues": ["Yes", "No"]
        }
    },
	"Mappings": {
		"StaticVariables": {
			"Main": {
                "ApiGatewayErrorMappingTemplate": "#set ($errorMessageObj = $util.parseJson($input.path('$.errorMessage')))\n#set ($bodyObj = $util.parseJson($input.body))\n{\n    \"type\": \"$errorMessageObj.errorType\",\n    \"message\": \"$errorMessageObj.message\"\n}",
                "DummyStageName": "DummyStage",
                "GenerateWordHttpMethod": "GET",
                "GenerateWordMethodPathPart": "generate-word",
                "PreWarmScheduleExpression": "rate(1 minute)",
                "QueueMessageRefreshScheduleExpression": "rate(3 days)",
                "QueueMessageRetentionPeriod": 1209600,
                "StageName": "v1",
                "UsedWordsTriggerBatchSize": 1,
                "WordList": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
			}
		}
	},
	"Conditions": {
		"PreWarmingEnabledCondition": {
			"Fn::Equals": [{
				"Ref": "PreWarmingEnabled"
			}, "Yes"]
		}
    },
	"Resources": {
		"WordListQueue": {
			"Type": "AWS::SQS::Queue",
			"Properties": {
                "VisibilityTimeout": 60,
                "MessageRetentionPeriod": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "QueueMessageRetentionPeriod"]
                }
			}
		},
		"QueueRefreshFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
                "Description": "Replaces the messages in an SQS queue to avoid expiration.",
				"Handler": "index.lambda_handler",
                "MemorySize": 128,
				"Role": {
					"Fn::GetAtt": ["QueueRefreshRole", "Arn"]
				},
				"Code": {
					"ZipFile": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
				},
				"Runtime": "python2.7",
				"Timeout": "300"
			}
		},
		"QueueRefreshRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/"
			}
		},
        "QueueRefreshRoleActions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
						"Resource": {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${QueueRefreshFunction}:log-stream:*"
						}
					},
                    {
                        "Effect": "Allow",
                        "Action": ["sqs:ReceiveMessage", "sqs:DeleteMessage", "sqs:SendMessage"],
                        "Resource": {
    						"Fn::GetAtt": ["WordListQueue", "Arn"]
                        }
                    }]
				},
                "Roles": [
                    { "Ref": "QueueRefreshRole" }
                ]
            }
        },
        "WordListQueueRefreshLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/lambda/${QueueRefreshFunction}"
                },
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "WordListQueueRefreshLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "QueueRefreshFunction"
                },
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": ["WordListQueueRefreshEventRule", "Arn"]
                }
            }
        },
        "WordListQueueRefreshEventRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Replaces the messages in the word list queue to avoid expiration.",
                "ScheduleExpression": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "QueueMessageRefreshScheduleExpression"]
                },
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": ["QueueRefreshFunction", "Arn"]
                        },
                        "Id": "WordListQueueRefresh",
                        "Input": {
                            "Fn::Sub": "{ \"queue-url\": \"${WordListQueue}\" }"
                        }
                    }
                ]
            },
            "DependsOn": [
                "QueueRefreshRoleActions",
                "WordListQueueRefreshLogGroup"
            ]
        },
        "UsedWordsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "PartitionKey",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "PartitionKey",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": {
                        "Ref": "MaxRequestsPerSecond"
                    },
                    "WriteCapacityUnits": {
                        "Ref": "MaxRequestsPerSecond"
                    }
                },
                "StreamSpecification": {
                    "StreamViewType": "KEYS_ONLY"
                }
            }
        },
		"ConfigurationSetupFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
                "Description": "Performs initial setup of unique word generator.",
				"Handler": "index.lambda_handler",
                "MemorySize": 1024,
				"Role": {
					"Fn::GetAtt": ["ConfigurationSetupRole", "Arn"]
				},
				"Code": {
					"ZipFile": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
				},
				"Runtime": "python2.7",
				"Timeout": "300"
			}
		},
		"ConfigurationSetupRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/"
			}
		},
        "ConfigurationSetupRoleActions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
						"Resource": {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${ConfigurationSetupFunction}:log-stream:*"
						}
					},
                    {
                        "Effect": "Allow",
                        "Action": ["sqs:SendMessage", "sqs:SendMessageBatch", "sqs:GetQueueAttributes", "sqs:PurgeQueue"],
                        "Resource": {
    						"Fn::GetAtt": ["WordListQueue", "Arn"]
                        }
                    }]
				},
                "Roles": [
                    { "Ref": "ConfigurationSetupRole" }
                ]
            }
        },
        "ConfigurationSetupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/lambda/${ConfigurationSetupFunction}"
                },
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
		"ConfigurationSetupInvocation": {
			"Type": "Custom::ConfigurationSetupInvocation",
			"Properties": {
				"ServiceToken": {
					"Fn::GetAtt": ["ConfigurationSetupFunction", "Arn"]
				},
                "ShuffleWordList": {
                    "Ref": "ShuffleWordList"
                },
				"WordListQueueUrl": {
                    "Ref": "WordListQueue"
				},
                "WordList": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "WordList"]
                }
			},
            "DependsOn": [
                "ConfigurationSetupRoleActions",
                "ConfigurationSetupLogGroup"
            ]
		},
		"WordGeneratorFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
                "Description": "Responds to API requests for the unique name generator.",
				"Handler": "index.lambda_handler",
                "MemorySize": 320,
				"Role": {
					"Fn::GetAtt": ["WordGeneratorRole", "Arn"]
				},
				"Code": {
					"ZipFile": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
				},
				"Runtime": "python2.7",
				"Timeout": "55"
			}
		},
		"WordGeneratorRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/"
			}
		},
        "WordGeneratorRoleActions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": ["logs:CreateLogStream", "logs:PutLogEvents"],
						"Resource": {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${WordGeneratorFunction}:log-stream:*"
						}
					},
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sqs:DeleteMessage",
                            "sqs:ReceiveMessage",
                            "sqs:SendMessage"
                        ],
                        "Resource": {
    						"Fn::GetAtt": ["WordListQueue", "Arn"]
                        }
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "dynamodb:PutItem"
                        ],
                        "Resource": {
                            "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${UsedWordsTable}"
                        }
                    }]
				},
                "Roles": [
                    { "Ref": "WordGeneratorRole" }
                ]
            }
        },
        "WordGeneratorFunctionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/lambda/${WordGeneratorFunction}"
                },
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
		"ApiGatewayCloudWatchRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["apigateway.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ]
			}
		},
        "ApiGatewayAccount": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {
                    "Fn::GetAtt": [ "ApiGatewayCloudWatchRole", "Arn" ]
                }
            }
        },
        "WordGeneratorApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "WordGenerator",
                "Description": "An API for generating unique words."
            }
        },
        "WordGeneratorApiRootGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "ResourceId": {
                    "Fn::GetAtt": [ "WordGeneratorApi", "RootResourceId" ]
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "HttpMethod": "GET",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Content-Type": "'text/html'"
                            },
                            "ResponseTemplates": {
                                "text/html": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": 200}"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Content-Type": false
                        },
                        "StatusCode": "200"
                    }
                ]
            }
        },
        "WordGeneratorApiGenerateNameResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": ["WordGeneratorApi", "RootResourceId"]
                },
                "PathPart": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordMethodPathPart"]
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                }
            }
        },
        "WordGeneratorGenerateWordApiGatewayLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "WordGeneratorFunction"
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Sub": [
                        "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WordGeneratorApi}/*/${GenerateWordHttpMethod}/${GenerateWordHttpMethodPathPart}",
                        {
                            "GenerateWordHttpMethod": {
                                "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                            },
                            "GenerateWordHttpMethodPathPart": {
                                "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordMethodPathPart"]
                            }
                        }
                    ]
                }
            },
            "DependsOn": [
                "WordGeneratorRoleActions",
                "WordGeneratorFunctionLogGroup"
            ]
        },
        "WordGeneratorApiGenerateNameResourceMainMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "ResourceId": {
                    "Ref": "WordGeneratorApiGenerateNameResource"
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "HttpMethod": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                },
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": {
                                    "Fn::Sub": [
                                        "'${GenerateWordHttpMethod},OPTIONS'",
                                        {
                                            "GenerateWordHttpMethod": {
                                                "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                                            }
                                        }
                                    ]
                                },
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,Pragma,Cache-Control,If-Modified-Since'",
                                "method.response.header.Content-Type": "'text/plain'"
                            },
                            "ResponseTemplates": {
                                "text/plain": "$input.path('$')"
                            },
                            "SelectionPattern": "",
                            "StatusCode": "200"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": {
                                    "Fn::Sub": [
                                        "'${GenerateWordHttpMethod},OPTIONS'",
                                        {
                                            "GenerateWordHttpMethod": {
                                                "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                                            }
                                        }
                                    ]
                                },
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,Pragma,Cache-Control,If-Modified-Since'",
                                "method.response.header.Content-Type": "'application/json'"
                            },
                            "ResponseTemplates": {
                                "application/json": "{\n    \"type\": \"InternalServerTimeout\",\n    \"message\": \"The word generator function did not respond quickly enough.\"\n}"
                            },
                            "SelectionPattern": ".*Task timed out after .*",
                            "StatusCode": "504"
                        },
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": {
                                    "Fn::Sub": [
                                        "'${GenerateWordHttpMethod},OPTIONS'",
                                        {
                                            "GenerateWordHttpMethod": {
                                                "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                                            }
                                        }
                                    ]
                                },
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,Pragma,Cache-Control,If-Modified-Since'",
                                "method.response.header.Content-Type": "'application/json'"
                            },
                            "ResponseTemplates": {
                                "application/json": {
                                    "Fn::FindInMap": ["StaticVariables", "Main", "ApiGatewayErrorMappingTemplate"]
                                }
                            },
                            "SelectionPattern": ".*httpStatus\\\":500.*",
                            "StatusCode": "500"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": {
                            "Fn::Join": ["", [
                                "{",
                                {
                                    "Fn::Sub": "\n\t\"request-body\": $input.json(\"$\")"
                                },
                                ",",
                                {
                                    "Fn::Sub": "\n\t\"wordlist-queue-url\": \"${WordListQueue}\""
                                },
                                ",",
                                {
                                    "Fn::Sub": "\n\t\"used-words-table\": \"${UsedWordsTable}\""
                                },
                                ",",
                                {
                                    "Fn::Sub": "\n\t\"warming\": \"$input.params('warming')\""
                                },
                                "\n}"
                            ]]
                        }
                    },
                    "Type": "AWS",
                    "Uri": {
                        "Fn::Sub": [
                            "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${WordGeneratorFunctionArn}/invocations",
                            {
                                "WordGeneratorFunctionArn": {
                                    "Fn::GetAtt": ["WordGeneratorFunction", "Arn"]
                                }
                            }
                        ]
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Content-Type": false
                        },
                        "StatusCode": "200"
                    },
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Content-Type": false
                        },
                        "StatusCode": "500"
                    },
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Headers": false,
                            "method.response.header.Content-Type": false
                        },
                        "StatusCode": "504"
                    }
                ],
                "RequestParameters": {
                    "method.request.querystring.warming": false
                }
            }
        },
        "WordGeneratorApiGenerateNameResourceOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "ResourceId": {
                    "Ref": "WordGeneratorApiGenerateNameResource"
                },
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "HttpMethod": "OPTIONS",
                "Integration": {
                    "IntegrationResponses": [
                        {
                            "ResponseParameters": {
                                "method.response.header.Access-Control-Allow-Origin": "'*'",
                                "method.response.header.Access-Control-Allow-Methods": {
                                    "Fn::Sub": [
                                        "'${GenerateWordHttpMethod},OPTIONS'",
                                        {
                                            "GenerateWordHttpMethod": {
                                                "Fn::FindInMap": ["StaticVariables", "Main", "GenerateWordHttpMethod"]
                                            }
                                        }
                                    ]
                                },
                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,Pragma,Cache-Control,If-Modified-Since'"
                            },
                            "StatusCode": "200"
                        }
                    ],
                    "PassthroughBehavior": "NEVER",
                    "RequestTemplates": {
                        "application/json": "{\"statusCode\": \"200\"}"
                    },
                    "Type": "MOCK"
                },
                "MethodResponses": [
                    {
                        "ResponseParameters": {
                            "method.response.header.Access-Control-Allow-Origin": false,
                            "method.response.header.Access-Control-Allow-Methods": false,
                            "method.response.header.Access-Control-Allow-Headers": false
                        },
                        "StatusCode": "200"
                    }
                ]
            }
        },
        "WordGeneratorApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "StageName": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "DummyStageName"]
                }
            },
            "DependsOn": [
                "WordGeneratorApiGenerateNameResourceMainMethod",
                "WordGeneratorApiGenerateNameResourceOptions",
                "WordGeneratorApiDummyStageLogGroup"
            ]
        },
        "WordGeneratorApiDummyStageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": [
                        "API-Gateway-Execution-Logs_${WordGeneratorApi}/${DummyStageName}",
                        {
                            "DummyStageName": {
                                "Fn::FindInMap": ["StaticVariables", "Main", "DummyStageName"]
                            }
                        }
                    ]
                },
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "WordGeneratorApiStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "WordGeneratorApiDeployment"
                },
                "MethodSettings": [
                    {
                        "ResourcePath": "",
                        "HttpMethod": "*/*",
                        "DataTraceEnabled": true,
                        "LoggingLevel": "INFO",
                        "MetricsEnabled": true
                    }
                ],
                "RestApiId": {
                    "Ref": "WordGeneratorApi"
                },
                "StageName": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "StageName"]
                }
            },
            "DependsOn": [
                "WordGeneratorApiMainStageLogGroup"
            ]
        },
        "WordGeneratorApiMainStageLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": [
                        "API-Gateway-Execution-Logs_${WordGeneratorApi}/${MainStageName}",
                        {
                            "MainStageName": {
                                "Fn::FindInMap": ["StaticVariables", "Main", "StageName"]
                            }
                        }
                    ]
                },
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "PreWarmApiEventRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Keeps unique word generator API initial response times fast.",
                "ScheduleExpression": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "PreWarmScheduleExpression"]
                },
                "State": {
                    "Fn::If": [
                        "PreWarmingEnabledCondition",
                        "ENABLED",
                        "DISABLED"
                    ]
                },
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [ "WordGeneratorFunction", "Arn" ]
                        },
                        "Id": "WordGeneratorFunction",
                        "Input": {
                            "Fn::Join": ["", [
                                "{",
                                {
                                    "Fn::Sub": "\n\t\"used-words-table\": \"${UsedWordsTable}\""
                                },
                                ",",
                                {
                                    "Fn::Sub": "\n\t\"warming\": true"
                                },
                                "\n}"
                            ]]
                        }
                    }
                ]
            }
        },
        "PreWarmApiCloudWatchLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Ref": "WordGeneratorFunction"
                },
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": ["PreWarmApiEventRule", "Arn"]
                }
            },
            "DependsOn": [
                "WordGeneratorRoleActions",
                "WordGeneratorFunctionLogGroup"
            ]
        },
		"WordListTableTriggerFunction": {
			"Type": "AWS::Lambda::Function",
			"Properties": {
                "Description": "Receives events from the reserved words table.",
				"Handler": "index.lambda_handler",
                "MemorySize": 128,
				"Role": {
					"Fn::GetAtt": ["WordListTableTriggerFunctionRole", "Arn"]
				},
				"Code": {
					"ZipFile": "__ADDED_BY_CLOUDFORMATION_TEMPLATE_BUILDER__"
				},
				"Runtime": "python2.7",
				"Timeout": "55"
			}
		},
		"WordListTableTriggerFunctionRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["lambda.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/"
			}
		},
        "WordListTableTriggerFunctionRoleActions": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Action": [
                            "logs:CreateLogStream", 
                            "logs:PutLogEvents"
                        ],
						"Resource": {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${WordListTableTriggerFunction}:log-stream:*"
						}
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "dynamodb:DescribeStream",
                            "dynamodb:GetRecords",
                            "dynamodb:GetShardIterator",
                            "dynamodb:ListStreams"
                        ],
                        "Resource": {
                            "Fn::GetAtt": ["UsedWordsTable", "StreamArn"]
                        }
                    }]
				},
                "Roles": [
                    { "Ref": "WordListTableTriggerFunctionRole" }
                ]
            }
        },
        "WordListTableTriggerLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {
                    "Fn::Sub": "/aws/lambda/${WordListTableTriggerFunction}"
                },
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            }
        },
        "WordListTableTriggerFunctionEventSourceMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": {
                    "Fn::FindInMap": ["StaticVariables", "Main", "UsedWordsTriggerBatchSize"]
                },
                "EventSourceArn": {
                    "Fn::GetAtt": ["UsedWordsTable", "StreamArn"]
                },
                "FunctionName": {
                    "Ref": "WordListTableTriggerFunction"
                },
                "StartingPosition": "TRIM_HORIZON"
            },
            "DependsOn": [
                "WordListTableTriggerFunctionRoleActions",
                "WordListTableTriggerLogGroup"
            ]
        }
	},
    "Outputs": {
        "WordGeneratorApiEndPoint": {
            "Value": {
                "Fn::Sub": [
                    "https://${WordGeneratorApi}.execute-api.${AWS::Region}.amazonaws.com/${MainStageName}/",
                    {
                        "MainStageName": {
                            "Fn::FindInMap": ["StaticVariables", "Main", "StageName"]
                        }
                    }
                ]
            }
        }
    }
}